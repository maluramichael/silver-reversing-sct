._DATA
VAR_0	0	
VAR_1	0	
VAR_2	0	
VAR_3	0	
VAR_4	0	
VAR_5	0	
VAR_6	0	
VAR_7	0	
VAR_8	"random_rain_fx: Rain SFX not initialised! See Marc"	
VAR_9	0	
VAR_10	0	
VAR_11	0	
VAR_12	0	
VAR_13	0	
VAR_14	0	
VAR_15	0	
VAR_16	0	
VAR_17	{ 0, 0 }	
VAR_18	"RAINPT1"	
VAR_19	"it's_raining"	
VAR_20	{ -1880, 1514, 7240 }	
VAR_21	{ 257, 1514, 725 }	
VAR_22	"RAIN"	
VAR_23	0	
VAR_24	0	
VAR_25	0	
VAR_26	0	
VAR_27	0	
VAR_28	0	
VAR_29	0	
VAR_30	0	
VAR_31	0	
VAR_32	{ 363, 0, -1250 }	
VAR_33	{ 786, 0, -1171 }	
VAR_34	{ 519, 0, -915 }	
VAR_35	{ 857, 0, -4629 }	
VAR_36	{ 188, 0, -4615 }	
VAR_37	{ 577, 0, -1257 }	
VAR_38	{ -230, 0, -913 }	
VAR_39	{ 1196, 0, -994 }	
VAR_40	{ 529, 0, -4547, 0, 0, 0, 0, 0 }	
VAR_41	"nflatnose"	
VAR_42	"nrebel"	
VAR_43	{ 5, 200, 28, VAR_44, 1, 0, 5, 5, 28, VAR_45, 1, 0, 7, 8 }	
VAR_44	"confused"	
VAR_45	"gstqustn"	
VAR_46	{ 28, VAR_47, 1, 0, 5, 5, 28, VAR_48, 1, 0, 5, 5, 28, VAR_49, 1, 0, 5, 200, 28, VAR_50, 1, 0, 7, 8 }	
VAR_47	"talkfstb"	
VAR_48	"gstqustn"	
VAR_49	"talkfstb"	
VAR_50	"no"	
VAR_51	0	
VAR_52	0	
VAR_53	{ -263, 0, -1988, 1267, 0, -2299 }	
VAR_54	{ 0, 0, 1, -1, 8, 0, 12, 28, 30, 31, 30, 31, -1, 13, 1, 14, 0, 2, 3, 5, 0, 80, 18, 25, -1 }	
VAR_55	{ 0, 0, 1, -1, 8, 0, 12, 11, 12, 13, 11, 12, -1, 13, 1, 14, 0, 2, 3, 5, 0, 80, 18, 25, -1 }	
VAR_56	"rlieuten"	
VAR_57	"muscles"	
VAR_58	"dick"	
VAR_59	"finnegan"	
VAR_60	"longjohn"

._on_load
execute SCRIPT_3
call play_bgm(var &VAR_18)
if(gamevar is_room_cleared)
 {
		execute SCRIPT_8
}
else
 {
		switch(gamevar room_state)
		 {
				case 1
					execute SCRIPT_5
					break 
				case 2
					execute SCRIPT_7
					break 
				case 0
					break 
		}
}

._infinite_loop
execute SCRIPT_10
if(gamevar !is_room_cleared)
 {
		switch(gamevar room_state)
		 {
				case 1
					execute SCRIPT_4
					break 
				case 2
					execute SCRIPT_6
					break 
				case 0
					break 
		}
}

._on_exit
if(gamevar !is_room_cleared)
 {
		switch(gamevar room_state)
		 {
				case 1
					gamevar room_state ++ 
					break 
				case 2
					break 
				case 0
					break 
				default 
					gamevar room_state = int 0
					break 
		}
}

._SCRIPT_3
call log(var &VAR_19)
call play_3d_fx(var &VAR_22, var &VAR_20, var &VAR_21, int 5)
execute SCRIPT_9

._SCRIPT_4
switch(var VAR_51)
 {
		case 0
			if(var VAR_52 > int 40)
			 {
					if(call is_char_handle_in_level(int 7143428))
					 {
							if(call is_char_handle_in_level(int 1114112))
							 {
									call char_attack(var VAR_27, var VAR_31)
							}
					}
					if(call is_char_handle_in_level(int 7143427))
					 {
							if(call is_char_handle_in_level(int 1114112))
							 {
									call char_attack(var VAR_26, var VAR_31)
									call char_attack(var VAR_31, var VAR_26)
							}
					}
					else
					 {
							if(call is_char_handle_in_level(int 1114112))
							 {
									if(call is_char_handle_in_level(int 7143428))
									 {
											call char_attack(var VAR_31, var VAR_27)
									}
							}
					}
					var VAR_51 ++ 
			}
			break 
		case 1
			if(call func_d1(var &VAR_53))
			 {
					var VAR_51 ++ 
			}
			else
			 {
					if(call func_8a(var &VAR_53))
					 {
							var VAR_51 ++ 
					}
			}
			break 
		case 2
			call func_2b(var VAR_28, int 0)
			if(call is_char_handle_in_level(int 7143424))
			 {
					call func_50(var VAR_23, int 131)
					call func_106(var VAR_23, int 1, int 0, int 1)
			}
			if(call is_char_handle_in_level(int 7143425))
			 {
					call func_50(var VAR_24, int 131)
					call func_106(var VAR_24, int 1, int 0, int 1)
			}
			if(call is_char_handle_in_level(int 7143426))
			 {
					call func_50(var VAR_25, int 131)
					call func_106(var VAR_25, int 1, int 0, int 1)
			}
			if(call is_char_handle_in_level(int 6750208))
			 {
					call func_50(var VAR_29, int 513)
			}
			if(call is_char_handle_in_level(int 6750209))
			 {
					call func_50(var VAR_30, int 513)
			}
			if(call is_char_handle_in_level(int 1114112))
			 {
					if(call is_char_handle_in_level(int 7143424))
					 {
							call char_attack(var VAR_31, var VAR_23)
					}
					else
					 {
							if(call is_char_handle_in_level(int 7143425))
							 {
									call char_attack(var VAR_31, var VAR_24)
							}
							else
							 {
									if(call is_char_handle_in_level(int 7143426))
									 {
											call char_attack(var VAR_31, var VAR_25)
									}
							}
					}
			}
			var VAR_51 ++ 
			break 
		case 3
			if(call is_char_standing(var VAR_28))
			 {
					call remove_char(var VAR_28)
					var VAR_51 ++ 
			}
			break 
		case 4
			if(call is_char_handle_in_level(int 1114112))
			 {
					if(call ! is_char_handle_in_level(int 7143424))
					 {
							if(call ! is_char_handle_in_level(int 7143425))
							 {
									if(call ! is_char_handle_in_level(int 7143426))
									 {
											call func_2b(var VAR_31, int 0)
											var VAR_51 ++ 
									}
							}
					}
			}
			break 
		case 5
			if(call is_char_handle_in_level(int 1114112))
			 {
					if(call is_char_standing(var VAR_31))
					 {
							call remove_char(var VAR_31)
							var VAR_51 ++ 
					}
			}
			break 
}
if(call is_char_handle_in_level(int 1114112))
 {
		gamevar script_object = var VAR_31
		if(gamevar *object_p+5 == int 6)
		 {
				if(call is_char_handle_in_level(int 7143427))
				 {
						gamevar script_object = var VAR_26
						gamevar *character_stats_p+15 = int 3000
						call func_106(var VAR_26, int 1, int 0, int 1)
						call func_50(var VAR_26, int 131)
				}
				if(call is_char_handle_in_level(int 7143428))
				 {
						gamevar script_object = var VAR_27
						gamevar *character_stats_p+15 = int 3000
						call func_106(var VAR_27, int 1, int 0, int 1)
						call func_50(var VAR_27, int 131)
				}
				call kill_char(var VAR_31)
		}
}
var VAR_52 ++ 

._SCRIPT_5
var VAR_23 = call create_enemy(int 11, int 0, var &VAR_32, int 83)
call freeze_enemy(var VAR_23)
var VAR_24 = call create_enemy(int 11, int 1, var &VAR_33, int 248)
call freeze_enemy(var VAR_24)
call add_item_to_char(var VAR_24, int 41, int 1, int 0)
var VAR_25 = call create_enemy(int 11, int 2, var &VAR_34, int 158)
call freeze_enemy(var VAR_25)
var VAR_28 = call create_char(var &VAR_37, var &VAR_41, int 276, int 13)
call set_char_running(var VAR_28)
gamevar script_object = var VAR_28
gamevar *character_movement_p+60 = int 1
var VAR_29 = call create_enemy(int 17, int 0, var &VAR_38, int 113)
call freeze_enemy(var VAR_29)
var VAR_30 = call create_enemy(int 17, int 1, var &VAR_39, int 218)
call freeze_enemy(var VAR_30)
var VAR_26 = call create_enemy(int 11, int 3, var &VAR_35, int 283)
call func_106(var VAR_26, int 1, int 0, int 1)
call freeze_enemy(var VAR_26)
call add_item_to_char(var VAR_26, int 43, int 1, int 0)
var VAR_27 = call create_enemy(int 11, int 4, var &VAR_36, int 91)
call func_106(var VAR_27, int 1, int 0, int 1)
call freeze_enemy(var VAR_27)
call add_item_to_char(var VAR_27, int 42, int 1, int 0)
var VAR_31 = call create_char(var &VAR_40, var &VAR_42, int 283, int 13)
call add_item_to_char(var VAR_31, int 17, int 0, int 1)
gamevar script_object = var VAR_31
gamevar HP = int 8
gamevar ARMOUR_CLASS = int 1
gamevar STRENGTH = int 1
gamevar DEXTERITY = int 1
call play_char_ai_script(var VAR_28, var &VAR_43)
call func_50(var VAR_28, int 8192)
call play_char_ai_script(var VAR_23, var &VAR_46)
call func_50(var VAR_23, int 8192)

._SCRIPT_6

._SCRIPT_7

._SCRIPT_8
switch(gamevar is_room_cleared)
 {
		case 1
			call load_char(var &VAR_56)
			call run_wandering_generator(var &VAR_55, int 100)
			break 
		case 2
			call load_char(var &VAR_57)
			call load_char(var &VAR_58)
			call load_char(var &VAR_59)
			call load_char(var &VAR_60)
			call func_b8(int 91)
			call func_b8(int 93)
			call run_wandering_generator(var &VAR_54, int 100)
			break 
}

._SCRIPT_9
call load_sound_set(int 25)
call play_loaded_sound(int 1, int -1, int 25, int 0)
var VAR_2 = call play_loaded_sound(int 3, int -1, int 25, int 0)
var VAR_1 = int 70
call set_sound_volume(var VAR_2, var VAR_1)
var VAR_0 = int 1

._SCRIPT_10
if(var ! VAR_0)
 {
		call log(var &VAR_8)
		exit_script 
}
switch(var VAR_4)
 {
		case 0
			if(var VAR_3)
			 {
					var VAR_6 = int 1
					var VAR_4 ++ 
					var VAR_5 = int 0
			}
			break 
		case 1
			if(var VAR_1 < int 200)
			 {
					var VAR_7 = var VAR_5 % int 2
					if(var VAR_7 == int 0)
					 {
							var VAR_1 += var VAR_6
							call set_sound_volume(var VAR_2, var VAR_1)
					}
			}
			else
			 {
					var VAR_4 ++ 
					var VAR_5 = int 0
			}
			break 
		case 2
			if(var VAR_5 > int 150)
			 {
					var VAR_4 ++ 
					var VAR_5 = int 0
			}
			break 
		case 3
			if(var VAR_1 > int 70)
			 {
					var VAR_7 = var VAR_5 % int 2
					if(var VAR_7)
					 {
							var VAR_1 -= var VAR_6
							call set_sound_volume(var VAR_2, var VAR_1)
					}
			}
			else
			 {
					var VAR_3 = int 0
					var VAR_4 = int 0
					var VAR_5 = int 0
			}
			break 
}
execute SCRIPT_11
execute SCRIPT_12
var VAR_5 ++ 

._SCRIPT_11
switch(var VAR_9)
 {
		case 0
			var VAR_10 = int 0
			var VAR_11 = call randomize_int(int 1200, int 1801)
			var VAR_9 ++ 
			break 
		case 1
			if(var VAR_10 > var VAR_11)
			 {
					var VAR_12 = call play_loaded_sound(int 4, int 0, int 25, int 0)
					call set_sound_volume(var VAR_12, call randomize_int(int 100, int 201))
					call func_11a(var VAR_12, call randomize_int(int 0, int 128))
					if(var ! VAR_3)
					 {
							var VAR_3 = int 1
					}
					var VAR_9 ++ 
					var VAR_10 = int 0
			}
			break 
		case 2
			if(var VAR_10 > int 200)
			 {
					var VAR_9 = int 0
					var VAR_10 = int 0
			}
			break 
}
var VAR_10 ++ 

._SCRIPT_12
switch(var VAR_13)
 {
		case 0
			if(gamevar scene_counter > int 600)
			 {
					var VAR_13 ++ 
			}
			break 
		case 1
			var VAR_14 = int 0
			call reset_local_timer()
			var VAR_16 = call randomize_int(int 400, int 601)
			var VAR_13 ++ 
			break 
		case 2
			if(call is_local_timer_greater_than(var VAR_16))
			 {
					call apply_effect_on_char(gamevar misc_fx_scripts, int 6, int 0, int 0)
					call reset_local_timer()
					var VAR_17 = int 255
					var VAR_16 = call randomize_int(int 1, int 31)
					var VAR_14 = int 0
					var VAR_13 ++ 
			}
			break 
		case 3
			if(call is_local_timer_greater_than(var VAR_16))
			 {
					var VAR_17 -= int 4 * var VAR_16
					var VAR_15 = call play_loaded_sound(int 5, int 0, int 25, int 0)
					call set_sound_volume(var VAR_15, var VAR_17)
					var VAR_16 = int 255 - var VAR_17
					var VAR_14 = int 0
					var VAR_13 ++ 
			}
			break 
		case 4
			if(var VAR_14 > var VAR_16)
			 {
					var VAR_15 = call play_loaded_sound(int 4, int 0, int 25, int 0)
					call set_sound_volume(var VAR_15, var VAR_17)
					if(var ! VAR_3)
					 {
							var VAR_3 = int 1
					}
					var VAR_13 ++ 
					var VAR_14 = int 0
			}
			break 
		case 5
			if(var VAR_14 > int 100)
			 {
					var VAR_13 = int 1
					var VAR_14 = int 0
			}
			break 
}
var VAR_14 ++ 
